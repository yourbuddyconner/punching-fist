apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  serviceName: {{ .Release.Name }}-headless
  replicas: {{ .Values.operator.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Values.security.serviceAccount.name }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.global.image.repository }}:{{ .Values.global.image.tag }}"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          ports:
            - name: http
              containerPort: {{ .Values.server.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.operator.resources | nindent 12 }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LLM_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: openhands-api-key
            - name: LLM_MODEL
              value: {{ .Values.openhands.model | quote }}
            - name: LOG_ALL_EVENTS
              value: "true"
            - name: SANDBOX_RUNTIME_CONTAINER_IMAGE
              value: "docker.all-hands.dev/all-hands-ai/runtime:0.39-nikolaik"
            - name: SQLITE_PATH
              value: "/app/data/punching-fist.db"
            - name: DATABASE_TYPE
              value: "sqlite"
            - name: EXECUTION_MODE
              value: "kubernetes"
            - name: OPENHANDS_SECRET_NAME
              value: {{ .Release.Name }}-secrets
            - name: OPENHANDS_SECRET_KEY
              value: "openhands-api-key"
          volumeMounts:
            - name: docker-sock
              mountPath: /var/run/docker.sock
            - name: openhands-state
              mountPath: /.openhands-state
            - name: database-storage
              mountPath: /app/data
      volumes:
        - name: docker-sock
          hostPath:
            path: /var/run/docker.sock
        - name: openhands-state
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: database-storage
        labels:
          app.kubernetes.io/name: {{ .Chart.Name }}
          app.kubernetes.io/instance: {{ .Release.Name }}
      spec:
        accessModes: 
          - ReadWriteOnce
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }} 