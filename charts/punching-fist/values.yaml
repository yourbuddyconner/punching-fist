# Global settings
global:
  image:
    repository: ttl.sh/punching-fist-operator
    tag: "2h"
    pullPolicy: IfNotPresent

# Operator configuration
operator:
  replicaCount: 1
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

# Server configuration
server:
  port: 8080
  host: "0.0.0.0"

# Agent configuration
agent:
  # Provider to use: anthropic, openai, or mock
  provider: "anthropic"
  # API key for the provider - set via --set or use existing secret
  anthropicApiKey: ""
  openaiApiKey: ""
  # Model to use
  model: "claude-3-5-sonnet"
  # Temperature for LLM responses
  temperature: 0.7
  # Max tokens for responses
  maxTokens: 4096

# Persistence configuration for SQLite database
persistence:
  enabled: true
  size: 1Gi
  storageClass: ""  # Use default storage class
  accessMode: ReadWriteOnce

# Prometheus configuration
prometheus:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 15s

# Security configuration
security:
  serviceAccount:
    create: true
    name: punching-fist
  rbac:
    create: true
    rules:
      - apiGroups: [""]
        resources: ["pods", "services", "configmaps"]
        verbs: ["get", "list", "watch", "create", "update", "delete"]
      - apiGroups: ["batch"]
        resources: ["jobs"]
        verbs: ["get", "list", "watch", "create", "update", "delete"]

# Pod security context
podSecurityContext:
  fsGroup: 1000
  runAsUser: 1000
  runAsNonRoot: true

# Container security context
containerSecurityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: false  # Set to false to allow writing to mounted volumes
  runAsNonRoot: true
  capabilities:
    drop:
      - ALL

# Test resources configuration
testResources:
  enabled: false  # Enable to deploy test workloads
  namespace: test-workloads  # Namespace for test resources

# Prometheus Stack (subchart) configuration
prometheus-stack:
  enabled: false  # Enable to deploy Prometheus stack
  prometheus:
    prometheusSpec:
      # Resource limits
      resources:
        requests:
          memory: 400Mi
          cpu: 100m
        limits:
          memory: 800Mi
          cpu: 500m
      # Storage configuration
      storageSpec:
        volumeClaimTemplate:
          spec:
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 1Gi
      # Retention
      retention: 7d
      # Service monitor selector - will pick up our operator's service monitor
      serviceMonitorSelector: {}
      # Additional scrape configs for test workloads
      additionalScrapeConfigs:
        - job_name: 'test-pods'
          kubernetes_sd_configs:
            - role: pod
              namespaces:
                names:
                  - test-workloads
          relabel_configs:
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
              action: replace
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:$2
              target_label: __address__
    # Service configuration
    service:
      type: ClusterIP
      port: 9090
  # Disable components we don't need for testing
  alertmanager:
    enabled: false
  grafana:
    enabled: false
  kubeStateMetrics:
    enabled: true
  nodeExporter:
    enabled: false
  pushgateway:
    enabled: false

# Execution mode configuration
executionMode: local

# Database configuration
database:
  type: sqlite
  sqlitePath: "/data/punching-fist.db"
  # For PostgreSQL:
  # type: postgres
  # url: "postgres://user:password@localhost/punching_fist" 